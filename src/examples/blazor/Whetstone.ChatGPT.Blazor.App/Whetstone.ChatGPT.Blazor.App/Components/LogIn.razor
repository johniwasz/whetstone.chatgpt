@using Whetstone.ChatGPT.Blazor.App.State
@using System.ComponentModel.DataAnnotations

@inject IChatGPTClient ChatClient

<Blazorise.Bootstrap5.Modal @ref="loginDialog">
    <Blazorise.Bootstrap5.ModalContent Centered>
        <ModalHeader>
        <ModalTitle>Log In</ModalTitle>
        <CloseButton />
        </ModalHeader>
        <ModalBody>
            <ErrorNotification Exception="@exception" ErrorNotificationClosed="@OnErrorNotificationClosed"></ErrorNotification>
          <Validations Mode="ValidationMode.Manual" @ref="validations" Model="@credentials">
              <Validation>
                    <Field>
                        <FieldLabel>API Key</FieldLabel>
                        <TextEdit Role="TextRole.Password" @bind-Text="credentials.ApiKey" Placeholder="API Key">
                            <Feedback>
                                <ValidationError/>
                            </Feedback>
                        </TextEdit>
                    </Field>
                </Validation>
                <Validation>
                    <Field>
                        <FieldLabel>Organization</FieldLabel>
                        <TextEdit Role="TextRole.Text" @bind-Text="credentials.Organization" Placeholder="Organization"></TextEdit>
                    </Field>
                </Validation>
            </Validations>
            
        </ModalBody>
       <ModalFooter>
            <Blazorise.Bootstrap5.Button Color="Color.Primary" Type="ButtonType.Submit" Loading="@isLoading" Disabled="@isLoading" Clicked="@ValidateCredentialsAsync">
            @if (authenticationSucceeded)
            {
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.Check" IconSize="IconSize.Large"></Blazorise.Icons.FontAwesome.Icon>
            } Apply
            </Blazorise.Bootstrap5.Button>
       </ModalFooter>
    </Blazorise.Bootstrap5.ModalContent>
</Blazorise.Bootstrap5.Modal>