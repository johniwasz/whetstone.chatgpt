@using Whetstone.ChatGPT.Blazor.App.Models
@using Whetstone.ChatGPT.Blazor.App.State
@using Whetstone.ChatGPT.Models

@page "/imagegenerator"

@inject ILogger<ImageGenerator> Logger   
@inject IChatGPTClient ChatClient

<PageTitle>Image Generator</PageTitle>

<h3>Image Generator</h3>

<EditForm Model="@imageRequest" OnValidSubmit="@( async() => await HandleSubmitAsync())" class="w-50 p-3">
    <DataAnnotationsValidator />
    <Blazorise.ValidationSummary />
    <div class="form-group">
    <label for="ImageDescription" class="form-label">Image Description:</label>
    <InputTextArea id="ImageDescription" @bind-Value="imageRequest.ImageDescription" placeholder="Enter image description" DisplayName="Image Description" class="w-100 p-3" />
    <ValidationMessage For="@(() => imageRequest.ImageDescription)"/>
    </div>
    <div class="form-group">
    <label for="ImageSize" class="form-label">Image Size:</label>
    <InputSelect id="ImageSize" @bind-Value="imageRequest.ImageSize">
        @foreach (var gender in Enum.GetValues(typeof(CreatedImageSize)))
        {
            <option value="@gender">@gender</option>
        }
    </InputSelect>
    </div>
    <Button Type="ButtonType.Submit" class="btn btn-primary float-end" Loading="@isLoading" Disabled="@isLoading">Submit</Button>
    <ErrorNotification Exception="@exception" />
</EditForm>

<br />
<div class="border-width: 10px">
    <Figure>
    @if (imageUrl is not null)
    {
        <FigureImage Source="@imageUrl.ToString()"/>
    }
    </Figure>
</div>